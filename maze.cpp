#include<iostream>
#include<windows.h>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
using namespace std;
#define xsize 20
#define ysize 20
//int a[7][10] = {               /* °g®cªº°}¦C           */
//         1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
//         1, 0, 1, 0, 1, 0, 0, 0, 0, 1,
//         1, 0, 1, 0, 1, 7, 1, 1, 0, 1,
//         1, 0, 1, 0, 1, 1, 0, 0, 0, 1,
//         1, 0, 1, 0, 0, 1, 0, 0, 1, 1,
//         1, 0, 0, 0, 0, 0, 0, 0, 0, 1,
//         1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };

int a[xsize][xsize]={
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,
1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,
1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,
1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,1,0,1,
1,0,1,0,0,0,1,0,1,1,0,0,0,0,0,0,1,1,1,1,
1,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1,
1,0,1,0,1,0,1,0,0,0,1,1,0,1,0,1,1,1,0,1,
1,0,0,0,1,0,1,1,1,0,1,1,0,1,0,0,0,0,0,1,
1,1,1,1,1,0,0,1,0,0,0,1,0,1,1,1,1,1,1,1,
1,0,0,0,1,1,0,1,0,1,1,1,0,1,0,0,0,0,0,1,
1,0,1,0,0,0,0,1,0,1,1,0,0,1,0,1,1,1,1,1,
1,0,1,0,1,1,1,1,0,1,1,0,1,1,0,0,0,0,1,1,
1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,
1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,1,0,1,
1,0,0,0,0,0,0,1,0,1,0,1,0,0,0,0,0,0,0,1,
1,1,1,0,1,1,0,1,0,1,0,1,0,1,1,0,1,1,1,1,
1,1,1,0,1,1,0,0,0,0,0,1,0,1,0,0,0,0,1,1,
1,0,0,0,0,1,1,1,1,1,0,0,0,1,1,1,1,0,7,1,
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,};
int k=0;
int pr()
{
	system("cls");
	for(int i=0;i<xsize;i++)
	{	
		for(int j=0;j<ysize;j++)
		{
				if(a[i][j] ==1)
				printf("¡½");
			else if(a[i][j]==0)
				printf("¡¼");
				else if(a[i][j]==7)
				printf("¡»");
				else if(a[i][j]==4)
				printf("¡·");
				else if(a[i][j]==6)
				printf("¡µ");
		
		}
		cout<<endl; 
	}
	k++;
	cout<<k; 
//	Sleep(50);
	
}

int find(int x ,int y)
{
	pr();
	
	if(a[x][y]==7)//get flag
	{
		cout<<"found";
		return 1;
	}
	else
	{
		if(a[x][y]==0) //step on place 
		{
			a[x][y]=4;
				if(find(x+1,y)||find(x-1,y)||find(x,y+1)||find(x,y-1))
				{
					return 1;
				}
				else
				{
					a[x][y]=6;
					return 0;
				}
		}
		else //get wall
		{
			return 0;
		}
	}
}
int main()
{
	clock_t t1, t2;
	t1 = clock();
	find(1,1); 
	t2 = clock();
    printf("%lf\n", (t2-t1)/(double)(CLOCKS_PER_SEC));
}


